% \iffalse
%
% fixme.dtx --- Doc file for the FiXme package (code and documentation)
%
% Copyright (C) 1998 Didier Verna.
%
% PRCS: $Id: fixme.dtx 1.16 Sun, 11 Apr 1999 15:46:45 +0200 verna $
%
% Author:        Didier Verna <verna@inf.enst.fr>
% Maintainer:    Didier Verna <verna@inf.enst.fr>
% Created:       Thu Dec 10 16:04:01 1998 under XEmacs 21.2 (beta 6)
% Last Revision: Thu Dec 10 16:04:01 1998
%
% This file is part of FiXme.
%
% FiXme is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
%
% You are NOT ALLOWED to distribute this file alone. However,
% you are allowed to distribute this file under the condition
% that it is distributed along with the whole FiXme package.
% If you receive only some of these files from someone, complain!
%
% You are NOT ALLOWED to modify this file, or any other file in the
% FiXme package, neither to distribute modified versions of it. However,
% you are allowed to freely incorporate (possibly modified) parts of
% this file in other files with clearly different names, provided
% that the original authors are given full credit for their work.
%
% You are NOT ALLOWED to charge a fee for distribution or use of this
% package or any derivative work as described above, other than for the
% physical act of transferring copies.
%
%
% Commentary:
%
% Contents management by FCM version 0.1.
%
%
% Code:
%
%<*driver>
\documentclass[a4paper]{ltxdoc}
\usepackage[draft,warning]{fixme}
\begin{document}
% \OnlyDescription
\DocInput{fixme.dtx}
\end{document}
%</driver>
%
% \fi
%
% \catcode`\¡=14
% \CheckSum{179}
%
% ^^A $Format: "% \\newcommand{\\packageversion}{v$PackageVersion$}"$
% \newcommand{\packageversion}{v1.1-b14}
% ^^A $Format: "% \\newcommand{\\packagedate}{$PackageDate$}"$
% \newcommand{\packagedate}{1999/04/11}
% \MakeShortVerb{\|}
% \date{\today}
% \title{\textsf{FiXme} -- a \LaTeXe{} package fort inserting fixme notes
% in draft documents \thanks{This document describes \textsf{FiXme}
% \packageversion , last updated \packagedate .}}
% \author{Didier Verna\\
% |mailto:verna@inf.enst.fr|\\
% |http://www.inf.enst.fr/\~{}verna|}
% \maketitle
%
%
% \begin{abstract}
% In the process of writing a long document, it is common to let some parts
% unwritten or uncomplete, and come back to them later. When you have an
% important ammount of parts to be \emph{fixed} in your document, you probably
% want clues about where such parts are left (which I call ``fixme notes'').
% That's what this package does\fixme{actually, dont :-)}.\par
% The \textsf{fixme} package is copyright \copyright\ 1998-99 Didier Verna. All
% rights reserved. See the top of the dtx file for the conditions.
% \end{abstract}
%
%
% \section{User Interface}
% To use the package, simply say |\usepackage[|\meta{options}|]{fixme}| in the
% preamble of your document. \textsf{fixme} recognizes a set of global options
% and some specific ones that are described in the next section. The main
% interface to the package is the |\fixme{}| command that allows you to stick
% clues about parts which should be fixed in your document. If your are in
% \emph{final} mode, any fixme note left in the document generates an error.
% In \emph{draft} mode, the fixme notes appear in several forms controlled by
% the package options. The primary form is margin notes, but you can also have
% index entries, footnotes, warnings\ldots
% \par
% Additionally, you can summarize all fixme notes encountered in your document
% by issuing the command |\listoffixmes|. This generates a list in a format
% similar to that of figures or tables for instance.
%
% \section{Available Options}
% \subsection{Global options}
% The following options are usually given to \texttt{\bslash
% documentclass\{\}}, which in turn passes them to all packages.
% \par
% \DescribeEnv{final}\DescribeEnv{draft} First, you have to decide whether
% you're in \emph{draft} or \emph{final} mode. These options are mutually
% exclusive. In \emph{final} mode (the default) any remaining fixme note in the
% document generates an error. Well, if there are parts to be fixed, the
% document is not final right? On the contrary, the \emph{draft} option tells
% \textsf{FiXme} to issue fixme notes in a manner defined by the options
% described in the next subsection.
% \par
% \DescribeEnv{english}\DescribeEnv{french}
% \textsf{FiXme} currently supports both english and french language options.
% This actually only has the effect of modifying the behavior of the
% |\listfixmename| command (see the description in the next section).
%
% \subsection{Formatting options}
% These options control the output of the |\fixme{}| command. You can use any
% of them together.
% \par
% \DescribeEnv{nomargin} By default, \textsf{FiXme} inserts the fixme notes
% in the margin, like the one shown in the abstract. The note appears in small
% characters and flushed to the right. If you want to disable the margin note
% output, pass the \emph{nomargin} option to the package.
% \par
% \DescribeEnv{footnote} If you prefer to have footnotes, or if you want to
% have both (hey, don't forget to save some space for real text!), use this
% option.
% \par
% \DescribeEnv{index} With the \emph{index} option, fixme notes can also be
% inserted in the index of your document. All \textsf{FiXme} index entries
% appear under the ``FIXME's'' key at the beginning of the index.
% \par
% \DescribeEnv{warning}\DescribeEnv{info} Additionally, you might want to
% output warnings on the terminal and/or in the log file. The \emph{warning}
% option outputs a warning on the terminal with the fixme note and the line
% number from the source file. This warning is also registered in the log
% file. If you only want to register the fixme notes in the log file, use the
% \emph{info} option instead. It does essentially the same, but doesn't mess
% up your terminal output.
% \begin{quote}
% - And what if I want output on the terminal, but not in the log file?\\
% - Well, just get lost \{:-)
% \end{quote}
% \par
% \DescribeEnv{user} And what if you wanted something really, really fancy? I
% mean, like, sort of, playing ``A Candle in the Wind'' on your loudspeaker
% and displaying a picture of Pamela Anderson naked on your boss' computer
% screen? Well, you \textbf{can} do that. Just use the \emph{user} option, and
% provide a |\FiXmeUser| macro taking one argument (the fixme note, heh!).
%
% \section{Available Macros}
%
% \subsection{Fixme notes layout}
% \DescribeMacro{\fixme} This is the macro that you use to generate a fixme
% note in your document. It takes one argument: the note to generate. Simple
% hey? The one in the options section was generated like this:
% |\fixme{actually, don't :-)}|.
% \par
% \DescribeMacro{\FiXmeMargin}\DescribeMacro{\FiXmeFootnote}
% \DescribeMacro{\FiXmeIndex}
% \DescribeMacro{\FiXmeWarning}\DescribeMacro{\FiXmeInfo}
% \DescribeMacro{\FiXmeUser}
% These are the macros used by the |\fixme{}| command to generate the fixme
% notes in different manners. If you are not satisfied with the way they
% format the notes, you can redefine them using |\renewcommand{}|.
% Please refer to the next section to see how they are implemented by default.
% The |\FiXmeUser{}| macro actually doesn't exists. You're responsible for
% writing it using |\newcommand{}| if you use the \emph{user} option.
%
% \subsection{Fixme notes list}
% \DescribeMacro{\listoffixmes}
% \textsf{FiXme} remembers where you put fixme notes in a toc-like file with
% extension ``.lox''. The |\listoffixmes| command generates the list of all
% fixme notes in a manner similar to that of the list of figures for instance.
% A standard layout is automatically used for the article, report and book
% classes. If another (unknown) class is used, the article layout is selected
% by default. To customize the layout, you have to redefine the commands
% |\listoffixmes| and |\l@fixme|.
% \par
% \DescribeMacro{\listfixmename} This macro gives its title to the list of
% fixmes. It expands to ``List of FIXME's'' by default. The language options
% modify this. You can change its value with |\renewcommand{}|.
%
% \StopEventually{\par Well, I think that's it. Enjoy using FiXme!!
%   \vfill\hfill\small Copyright \copyright 1998-99 Didier Verna.}
% \section{The Code}
% For the interested reader, here is a short sequential description of the
% code implementing this package. Nothing clever, really, I think. But you
% know, I'm rather dumb as for writing packages\ldots{} that's life you know
% \ldots{} but I like it this way\ldots{} anyway.
%\par
% Many packages that I've seen suck because you can't override a global
% options by passing another one directly to the package itself. To avoid this
% kind of misfeature, I define everything depending on a global option as
% empty, process the default options, and use the star form of
% |\ProcessOptions|.
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}[1994/06/01]
¡ $Format: "\\ProvidesPackage{fixme}[$PackageDate$ v$PackageVersion$ Fixme notes in your document]"$
\ProvidesPackage{fixme}[1999/04/11 v1.1-b14 Fixme notes in your document]

%    \end{macrocode}
% Booleans that will control the behavior of the |\fixme{}| macro. By default,
% only margin notes are enabled:
%    \begin{macrocode}
\newif\iffixmemargin\fixmemargintrue
\newif\iffixmefootnote\fixmefootnotefalse
\newif\iffixmeindex\fixmeindexfalse
\newif\iffixmewarning\fixmewarningfalse
\newif\iffixmeinfo\fixmeinfofalse
\newif\iffixmeuser\fixmeuserfalse

%    \end{macrocode}
% Formatting commands used in the |\fixme{}| macro:
%    \begin{macrocode}
\newcommand{\FiXmeMargin}[1]{%
  \marginpar{\footnotesize\flushright\textbf{FIXME:} \emph{#1}}}
\newcommand{\FiXmeFootnote}[1]{%
  \footnote{\textbf{FIXME:} \emph{#1}}}
\newcommand{\FiXmeWarning}[1]{\PackageWarning{FiXme}{`#1'}}
\newcommand{\FiXmeInfo}[1]{\PackageInfo{FiXme}{`#1'}}
\newcommand{\FiXmeIndex}[1]{\index{***@FIXME's:!#1}}

%    \end{macrocode}
% Command naming the list of fixmes:
%    \begin{macrocode}
\newcommand{\listfixmename}{}

%    \end{macrocode}
% Different versions of the |\listoffixmes| command for different document
% classes (currently: article, report, book):
%    \begin{macrocode}
\newcommand\listoffixmes@article{%
  \section*{\listfixmename
    \@mkboth{\MakeUppercase\listfixmename}%
    {\MakeUppercase\listfixmename}}%
  \@starttoc{lox}%
  }
\newcommand*\l@fixme@article{\@dottedtocline{1}{1.5em}{2.3em}}

\newcommand\listoffixmes@report{%
  \if@twocolumn
  \@restonecoltrue\onecolumn
  \else
  \@restonecolfalse
  \fi
  \chapter*{\listfixmename
    \@mkboth{\MakeUppercase\listfixmename}%
    {\MakeUppercase\listfixmename}}%
  \@starttoc{lox}%
  \if@restonecol\twocolumn\fi
  }
\newcommand*\l@fixme@report{\@dottedtocline{1}{1.5em}{2.3em}}

\newcommand\listoffixmes@book{%
  \if@twocolumn
  \@restonecoltrue\onecolumn
  \else
  \@restonecolfalse
  \fi
  \chapter*{\listfixmename
    \@mkboth{\MakeUppercase\listfixmename}%
    {\MakeUppercase\listfixmename}}%
  \@starttoc{lox}%
  \if@restonecol\twocolumn\fi
  }
\newcommand*\l@fixme@book{\@dottedtocline{1}{1.5em}{2.3em}}

%    \end{macrocode}
%  Main interface functions |\fixme{}| and |\listoffixmes|.
%    \begin{macrocode}
\newcommand{\fixme}[1]{}
\newcommand{\listoffixmes}{}

%    \end{macrocode}
% Options controlling which actions should be performed when a \verb!\fixme{}!
% command is issued:
%    \begin{macrocode}
\DeclareOption{nomargin}{\fixmemarginfalse}
\DeclareOption{footnote}{\fixmefootnotetrue}
\DeclareOption{index}{\fixmeindextrue}
\DeclareOption{warning}{\fixmewarningtrue}
\DeclareOption{info}{\fixmeinfotrue}
\DeclareOption{user}{\fixmeusertrue}

%    \end{macrocode}
% Language options. Currently, I have only english and french.
%    \begin{macrocode}
\DeclareOption{english}{\renewcommand{\listfixmename}{List of FIXME's}}
\DeclareOption{french}{\renewcommand{\listfixmename}{Liste des FIXME's}}

%    \end{macrocode}
% General behavior options. Note that while |\fixme{}| generates an error in
% `final' mode, calling |\listoffixmes| actually does nothing. Also, note that
% in `draft' mode, it's useless to generate both a warning and an information.
%    \begin{macrocode}
\DeclareOption{final}{%
  \renewcommand{\fixme}[1]{%
    \PackageError{FiXme}{`#1' fixme left in final version.}\@ehc}}

\DeclareOption{draft}{%
  \renewcommand{\fixme}[1]{%
    \iffixmemargin\FiXmeMargin{#1}\fi%
    \iffixmefootnote\FiXmeFootnote{#1}\fi%
    \iffixmewarning\FiXmeWarning{#1}\else\iffixmeinfo\FiXmeInfo{#1}\fi\fi%
    \iffixmeindex\FiXmeIndex{#1}\fi%
    \iffixmeuser\FiXmeUser{#1}\fi%
    \addcontentsline{lox}{fixme}{#1}}
  \@ifclassloaded{article}{
    \let\l@fixme\l@fixme@article
    \let\listoffixmes\listoffixmes@article}{
    \@ifclassloaded{report}{
      \let\l@fixme\l@fixme@report
      \let\listoffixmes\listoffixmes@report}{
      \@ifclassloaded{book}{
        \let\l@fixme\l@fixme@book
        \let\listoffixmes\listoffixmes@book}{
        \let\l@fixme\l@fixme@article
        \let\listoffixmes\listoffixmes@article}
      }
    }
  }

%    \end{macrocode}
% Put us in \emph{english} and \emph{final} mode by default':
%    \begin{macrocode}
\ExecuteOptions{english,final}

%    \end{macrocode}
% Finally, process the options. In order to be sure that global options are
% processed first (this allows overriding them by passing opposite ones to the
% package directly), use the star form.
%    \begin{macrocode}
\ProcessOptions*

%    \end{macrocode}
% \Finale\PrintChanges
%
% ^^A fixme.dtx ends here.